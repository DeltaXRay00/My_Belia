defmodule MyBeliaWeb.UserLive.DokumenSokonganGeranLive do
  use MyBeliaWeb, :live_view
  alias MyBelia.GrantFormState

  def mount(_params, session, socket) do
    user_id = session["user_id"]
    current_user = if user_id, do: MyBelia.Accounts.get_user!(user_id)

    session_id = "grant_form_#{user_id || "anon"}"
    form_data = GrantFormState.get_form_data(session_id) || %{}

    socket =
      socket
      |> assign(
        current_user: current_user,
        page_title: "Dokumen Sokongan Geran",
        session_id: session_id,
        form_data: form_data
      )
      |> allow_upload(:documents,
        accept: ~w(.pdf .jpg .png .doc .docx),
        max_entries: 5
      )

    {:ok, socket, layout: false}
  end

  def render(assigns) do
    MyBeliaWeb.PageHTML.dokumen_sokongan_geran(assigns)
  end

  def handle_event("save-documents", _params, socket) do
    session_id = socket.assigns.session_id

    uploaded =
      consume_uploaded_entries(socket, :documents, fn %{path: tmp_path}, entry ->
        filename = "#{System.unique_integer([:positive])}_#{entry.client_name}"
        dest = Path.join(["priv/static/uploads", filename])
        File.mkdir_p!(Path.dirname(dest))
        File.cp!(tmp_path, dest)
        {:ok, "/uploads/#{filename}"}
      end)

    existing_data = socket.assigns.form_data || %{}
    updated = Map.put(existing_data, "supporting_documents", uploaded)
    GrantFormState.store_form_data(session_id, updated)

    {:noreply, push_navigate(socket, to: ~p"/pengesahan_permohonan")}
  end
end
